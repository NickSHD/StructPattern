1)Архитектура представляет собой единный класс юнитов, от которого наследуются три класса войнов,
которых может покупать игрок, создание объектов производится абстрактной фабрикой, полньстью написанной на шаблонах,
делается map из пары индентификатор(ID) и Creator'a, который по сути запускает конструктор для каждого класса наследника UNIT,
в данном случае я использовал фабрику на шаблонах, чтобы если в будущем понадоится создать класс Unit'ов, с другим интерфейсом
я бы использовал ту же абстракную фабрику.
2) Теперь от класса юнитов наследуется класс Composite, в котором мы храним именно отряд Unit'ов, для этого в классе Unit
 есть пометка, что класс композитный или нет, в зависимости от этого мы и определяем или нет функцию addUnit(), сам класс Composite
создается при помощи класса CompositeCreator.
Decorator написан для создания экономического развития и военного. Для экономического развития есть два варианта, либо
увеличивать здоровье, либо силу(это все касается как отрядов, так и единичных войнов), изначально у нас ничего не происходит
или военное развитие, которое просто отменяет экономическое(для этого мы просто храним в главном декораторе(от него все наследуются) декорируемою версию.
Экономическое же реализвано просто, перед операцией takemove() определенной для юнитов, оно выполняет нужные действия с ним.
Адаптер не понадобился, так как не присутствуют функции с реализацией больших функций, в которых бы большая часть совпадала и можно было бы воспользоваться
адаптером.
